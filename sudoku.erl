%% Author     : Albert Tovmasyan
%% Date       : 28 March 2013
%% Description: Solves problem # 96 from Euler Project (http://projecteuler.net/problem=96)
%% Metaprogramming was used to generate the whole code of this module.

-module(sudoku).
-export([sudoku/81,sudoku/83,launch_process/1]).
-vsn(1.0).

progress([],N) -> N;

progress([H|T],N) -> 
	case length(H) =< 1 of 
		true  -> progress(T,N+1);
		false -> progress(T,N)
	end.

taken([],L) -> L;

taken([H|T],L) -> 
	case length(H) of 
		1     -> taken(T,H++L);
		_else -> taken(T,L)
	end.

available(L1,L2,L3) ->
	[X||X<-["1","2","3","4","5","6","7","8","9"],not lists:member(X,lists:merge3(lists:sort(L1),lists:sort(L2),lists:sort(L3)))].

contains_empty(S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81) -> 
	if
		S1==[]  -> true;
		S2==[]  -> true;
		S3==[]  -> true;
		S4==[]  -> true;
		S5==[]  -> true;
		S6==[]  -> true;
		S7==[]  -> true;
		S8==[]  -> true;
		S9==[]  -> true;
		S10==[] -> true;
		S11==[] -> true;
		S12==[] -> true;
		S13==[] -> true;
		S14==[] -> true;
		S15==[] -> true;
		S16==[] -> true;
		S17==[] -> true;
		S18==[] -> true;
		S19==[] -> true;
		S20==[] -> true;
		S21==[] -> true;
		S22==[] -> true;
		S23==[] -> true;
		S24==[] -> true;
		S25==[] -> true;
		S26==[] -> true;
		S27==[] -> true;
		S28==[] -> true;
		S29==[] -> true;
		S30==[] -> true;
		S31==[] -> true;
		S32==[] -> true;
		S33==[] -> true;
		S34==[] -> true;
		S35==[] -> true;
		S36==[] -> true;
		S37==[] -> true;
		S38==[] -> true;
		S39==[] -> true;
		S40==[] -> true;
		S41==[] -> true;
		S42==[] -> true;
		S43==[] -> true;
		S44==[] -> true;
		S45==[] -> true;
		S46==[] -> true;
		S47==[] -> true;
		S48==[] -> true;
		S49==[] -> true;
		S50==[] -> true;
		S51==[] -> true;
		S52==[] -> true;
		S53==[] -> true;
		S54==[] -> true;
		S55==[] -> true;
		S56==[] -> true;
		S57==[] -> true;
		S58==[] -> true;
		S59==[] -> true;
		S60==[] -> true;
		S61==[] -> true;
		S62==[] -> true;
		S63==[] -> true;
		S64==[] -> true;
		S65==[] -> true;
		S66==[] -> true;
		S67==[] -> true;
		S68==[] -> true;
		S69==[] -> true;
		S70==[] -> true;
		S71==[] -> true;
		S72==[] -> true;
		S73==[] -> true;
		S74==[] -> true;
		S75==[] -> true;
		S76==[] -> true;
		S77==[] -> true;
		S78==[] -> true;
		S79==[] -> true;
		S80==[] -> true;
		S81==[] -> true;
		true    -> false
	end.

launch_process({S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,N,NewN}) -> 
	_Pid = spawn(sudoku,sudoku,[S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,N,NewN]).

sudoku(S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81) -> 
	sudoku(S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,0,1).

sudoku([H1],[H2],[H3],[H4],[H5],[H6],[H7],[H8],[H9],[H10],[H11],[H12],[H13],[H14],[H15],[H16],[H17],[H18],[H19],[H20],[H21],[H22],[H23],[H24],[H25],[H26],[H27],[H28],[H29],[H30],[H31],[H32],[H33],[H34],[H35],[H36],[H37],[H38],[H39],[H40],[H41],[H42],[H43],[H44],[H45],[H46],[H47],[H48],[H49],[H50],[H51],[H52],[H53],[H54],[H55],[H56],[H57],[H58],[H59],[H60],[H61],[H62],[H63],[H64],[H65],[H66],[H67],[H68],[H69],[H70],[H71],[H72],[H73],[H74],[H75],[H76],[H77],[H78],[H79],[H80],[H81],_,_) -> 
	io:format("The answer is ~p~n",[{H1,H2,H3,H4,H5,H6,H7,H8,H9,H10,H11,H12,H13,H14,H15,H16,H17,H18,H19,H20,H21,H22,H23,H24,H25,H26,H27,H28,H29,H30,H31,H32,H33,H34,H35,H36,H37,H38,H39,H40,H41,H42,H43,H44,H45,H46,H47,H48,H49,H50,H51,H52,H53,H54,H55,H56,H57,H58,H59,H60,H61,H62,H63,H64,H65,H66,H67,H68,H69,H70,H71,H72,H73,H74,H75,H76,H77,H78,H79,H80,H81}]);

sudoku(S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,N,NewN) when N == NewN -> 
	case contains_empty(S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81) of 
		true  -> throw(failInfiniteLoopPrevented); % fail;
		false -> ok
	end,
	if
		length(S1)==2  -> lists:map(fun launch_process/1,[{[X],S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([[X],S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S1]);
		length(S2)==2  -> lists:map(fun launch_process/1,[{S1,[X],S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,[X],S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S2]);
		length(S3)==2  -> lists:map(fun launch_process/1,[{S1,S2,[X],S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,[X],S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S3]);
		length(S4)==2  -> lists:map(fun launch_process/1,[{S1,S2,S3,[X],S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,[X],S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S4]);
		length(S5)==2  -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,[X],S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,[X],S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S5]);
		length(S6)==2  -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,[X],S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,[X],S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S6]);
		length(S7)==2  -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,[X],S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,[X],S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S7]);
		length(S8)==2  -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,[X],S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,[X],S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S8]);
		length(S9)==2  -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,[X],S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,[X],S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S9]);
		length(S10)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,[X],S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,[X],S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S10]);
		length(S11)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,[X],S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,[X],S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S11]);
		length(S12)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,[X],S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,[X],S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S12]);
		length(S13)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,[X],S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,[X],S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S13]);
		length(S14)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,[X],S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,[X],S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S14]);
		length(S15)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,[X],S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,[X],S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S15]);
		length(S16)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,[X],S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,[X],S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S16]);
		length(S17)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,[X],S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,[X],S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S17]);
		length(S18)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,[X],S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,[X],S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S18]);
		length(S19)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,[X],S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,[X],S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S19]);
		length(S20)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,[X],S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,[X],S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S20]);
		length(S21)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,[X],S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,[X],S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S21]);
		length(S22)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,[X],S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,[X],S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S22]);
		length(S23)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,[X],S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,[X],S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S23]);
		length(S24)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,[X],S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,[X],S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S24]);
		length(S25)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,[X],S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,[X],S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S25]);
		length(S26)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,[X],S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,[X],S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S26]);
		length(S27)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,[X],S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,[X],S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S27]);
		length(S28)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,[X],S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,[X],S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S28]);
		length(S29)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,[X],S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,[X],S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S29]);
		length(S30)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,[X],S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,[X],S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S30]);
		length(S31)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,[X],S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,[X],S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S31]);
		length(S32)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,[X],S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,[X],S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S32]);
		length(S33)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,[X],S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,[X],S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S33]);
		length(S34)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,[X],S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,[X],S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S34]);
		length(S35)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,[X],S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,[X],S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S35]);
		length(S36)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,[X],S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,[X],S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S36]);
		length(S37)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,[X],S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,[X],S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S37]);
		length(S38)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,[X],S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,[X],S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S38]);
		length(S39)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,[X],S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,[X],S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S39]);
		length(S40)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,[X],S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,[X],S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S40]);
		length(S41)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,[X],S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,[X],S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S41]);
		length(S42)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,[X],S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,[X],S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S42]);
		length(S43)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,[X],S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,[X],S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S43]);
		length(S44)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,[X],S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,[X],S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S44]);
		length(S45)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,[X],S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,[X],S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S45]);
		length(S46)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,[X],S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,[X],S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S46]);
		length(S47)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,[X],S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,[X],S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S47]);
		length(S48)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,[X],S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,[X],S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S48]);
		length(S49)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,[X],S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,[X],S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S49]);
		length(S50)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,[X],S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,[X],S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S50]);
		length(S51)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,[X],S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,[X],S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S51]);
		length(S52)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,[X],S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,[X],S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S52]);
		length(S53)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,[X],S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,[X],S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S53]);
		length(S54)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,[X],S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,[X],S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S54]);
		length(S55)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,[X],S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,[X],S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S55]);
		length(S56)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,[X],S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,[X],S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S56]);
		length(S57)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,[X],S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,[X],S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S57]);
		length(S58)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,[X],S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,[X],S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S58]);
		length(S59)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,[X],S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,[X],S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S59]);
		length(S60)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,[X],S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,[X],S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S60]);
		length(S61)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,[X],S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,[X],S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S61]);
		length(S62)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,[X],S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,[X],S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S62]);
		length(S63)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,[X],S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,[X],S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S63]);
		length(S64)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,[X],S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,[X],S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S64]);
		length(S65)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,[X],S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,[X],S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S65]);
		length(S66)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,[X],S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,[X],S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S66]);
		length(S67)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,[X],S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,[X],S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S67]);
		length(S68)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,[X],S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,[X],S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S68]);
		length(S69)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,[X],S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,[X],S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S69]);
		length(S70)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,[X],S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,[X],S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S70]);
		length(S71)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,[X],S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,[X],S72,S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S71]);
		length(S72)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,[X],S73,S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,[X],S73,S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S72]);
		length(S73)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,[X],S74,S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,[X],S74,S75,S76,S77,S78,S79,S80,S81],0)}||X<-S73]);
		length(S74)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,[X],S75,S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,[X],S75,S76,S77,S78,S79,S80,S81],0)}||X<-S74]);
		length(S75)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,[X],S76,S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,[X],S76,S77,S78,S79,S80,S81],0)}||X<-S75]);
		length(S76)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,[X],S77,S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,[X],S77,S78,S79,S80,S81],0)}||X<-S76]);
		length(S77)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,[X],S78,S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,[X],S78,S79,S80,S81],0)}||X<-S77]);
		length(S78)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,[X],S79,S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,[X],S79,S80,S81],0)}||X<-S78]);
		length(S79)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,[X],S80,S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,[X],S80,S81],0)}||X<-S79]);
		length(S80)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,[X],S81,NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,[X],S81],0)}||X<-S80]);
		length(S81)==2 -> lists:map(fun launch_process/1,[{S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,[X],NewN,progress([S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,[X]],0)}||X<-S81]);
		true		   -> throw(thisIsImpossible) % fail
	end;

sudoku(S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,S13,S14,S15,S16,S17,S18,S19,S20,S21,S22,S23,S24,S25,S26,S27,S28,S29,S30,S31,S32,S33,S34,S35,S36,S37,S38,S39,S40,S41,S42,S43,S44,S45,S46,S47,S48,S49,S50,S51,S52,S53,S54,S55,S56,S57,S58,S59,S60,S61,S62,S63,S64,S65,S66,S67,S68,S69,S70,S71,S72,S73,S74,S75,S76,S77,S78,S79,S80,S81,_N,NewN) -> 
	case length(S1) of 
		1 -> NewS1 = S1;
		_ -> NewS1 = available(taken([S2,S3,S4,S5,S6,S7,S8,S9],[]),taken([S10,S19,S28,S37,S46,S55,S64,S73],[]),taken([S2,S3,S10,S11,S12,S19,S20,S21],[]))
	end,
	case length(S2) of 
		1 -> NewS2 = S2;
		_ -> NewS2 = available(taken([NewS1,S3,S4,S5,S6,S7,S8,S9],[]),taken([S11,S20,S29,S38,S47,S56,S65,S74],[]),taken([NewS1,S3,S10,S11,S12,S19,S20,S21],[]))
	end,
	case length(S3) of 
		1 -> NewS3 = S3;
		_ -> NewS3 = available(taken([NewS1,NewS2,S4,S5,S6,S7,S8,S9],[]),taken([S12,S21,S30,S39,S48,S57,S66,S75],[]),taken([NewS1,NewS2,S10,S11,S12,S19,S20,S21],[]))
	end,
	case length(S4) of 
		1 -> NewS4 = S4;
		_ -> NewS4 = available(taken([NewS1,NewS2,NewS3,S5,S6,S7,S8,S9],[]),taken([S13,S22,S31,S40,S49,S58,S67,S76],[]),taken([S5,S6,S13,S14,S15,S22,S23,S24],[]))
	end,
	case length(S5) of 
		1 -> NewS5 = S5;
		_ -> NewS5 = available(taken([NewS1,NewS2,NewS3,NewS4,S6,S7,S8,S9],[]),taken([S14,S23,S32,S41,S50,S59,S68,S77],[]),taken([NewS4,S6,S13,S14,S15,S22,S23,S24],[]))
	end,
	case length(S6) of 
		1 -> NewS6 = S6;
		_ -> NewS6 = available(taken([NewS1,NewS2,NewS3,NewS4,NewS5,S7,S8,S9],[]),taken([S15,S24,S33,S42,S51,S60,S69,S78],[]),taken([NewS4,NewS5,S13,S14,S15,S22,S23,S24],[]))
	end,
	case length(S7) of 
		1 -> NewS7 = S7;
		_ -> NewS7 = available(taken([NewS1,NewS2,NewS3,NewS4,NewS5,NewS6,S8,S9],[]),taken([S16,S25,S34,S43,S52,S61,S70,S79],[]),taken([S8,S9,S16,S17,S18,S25,S26,S27],[]))
	end,
	case length(S8) of 
		1 -> NewS8 = S8;
		_ -> NewS8 = available(taken([NewS1,NewS2,NewS3,NewS4,NewS5,NewS6,NewS7,S9],[]),taken([S17,S26,S35,S44,S53,S62,S71,S80],[]),taken([NewS7,S9,S16,S17,S18,S25,S26,S27],[]))
	end,
	case length(S9) of 
		1 -> NewS9 = S9;
		_ -> NewS9 = available(taken([NewS1,NewS2,NewS3,NewS4,NewS5,NewS6,NewS7,NewS8],[]),taken([S18,S27,S36,S45,S54,S63,S72,S81],[]),taken([NewS7,NewS8,S16,S17,S18,S25,S26,S27],[]))
	end,
	case length(S10) of 
		1 -> NewS10 = S10;
		_ -> NewS10 = available(taken([S11,S12,S13,S14,S15,S16,S17,S18],[]),taken([NewS1,S19,S28,S37,S46,S55,S64,S73],[]),taken([NewS1,NewS2,NewS3,S11,S12,S19,S20,S21],[]))
	end,
	case length(S11) of 
		1 -> NewS11 = S11;
		_ -> NewS11 = available(taken([NewS10,S12,S13,S14,S15,S16,S17,S18],[]),taken([NewS2,S20,S29,S38,S47,S56,S65,S74],[]),taken([NewS1,NewS2,NewS3,NewS10,S12,S19,S20,S21],[]))
	end,
	case length(S12) of 
		1 -> NewS12 = S12;
		_ -> NewS12 = available(taken([NewS10,NewS11,S13,S14,S15,S16,S17,S18],[]),taken([NewS3,S21,S30,S39,S48,S57,S66,S75],[]),taken([NewS1,NewS2,NewS3,NewS10,NewS11,S19,S20,S21],[]))
	end,
	case length(S13) of 
		1 -> NewS13 = S13;
		_ -> NewS13 = available(taken([NewS10,NewS11,NewS12,S14,S15,S16,S17,S18],[]),taken([NewS4,S22,S31,S40,S49,S58,S67,S76],[]),taken([NewS4,NewS5,NewS6,S14,S15,S22,S23,S24],[]))
	end,
	case length(S14) of 
		1 -> NewS14 = S14;
		_ -> NewS14 = available(taken([NewS10,NewS11,NewS12,NewS13,S15,S16,S17,S18],[]),taken([NewS5,S23,S32,S41,S50,S59,S68,S77],[]),taken([NewS4,NewS5,NewS6,NewS13,S15,S22,S23,S24],[]))
	end,
	case length(S15) of 
		1 -> NewS15 = S15;
		_ -> NewS15 = available(taken([NewS10,NewS11,NewS12,NewS13,NewS14,S16,S17,S18],[]),taken([NewS6,S24,S33,S42,S51,S60,S69,S78],[]),taken([NewS4,NewS5,NewS6,NewS13,NewS14,S22,S23,S24],[]))
	end,
	case length(S16) of 
		1 -> NewS16 = S16;
		_ -> NewS16 = available(taken([NewS10,NewS11,NewS12,NewS13,NewS14,NewS15,S17,S18],[]),taken([NewS7,S25,S34,S43,S52,S61,S70,S79],[]),taken([NewS7,NewS8,NewS9,S17,S18,S25,S26,S27],[]))
	end,
	case length(S17) of 
		1 -> NewS17 = S17;
		_ -> NewS17 = available(taken([NewS10,NewS11,NewS12,NewS13,NewS14,NewS15,NewS16,S18],[]),taken([NewS8,S26,S35,S44,S53,S62,S71,S80],[]),taken([NewS7,NewS8,NewS9,NewS16,S18,S25,S26,S27],[]))
	end,
	case length(S18) of 
		1 -> NewS18 = S18;
		_ -> NewS18 = available(taken([NewS10,NewS11,NewS12,NewS13,NewS14,NewS15,NewS16,NewS17],[]),taken([NewS9,S27,S36,S45,S54,S63,S72,S81],[]),taken([NewS7,NewS8,NewS9,NewS16,NewS17,S25,S26,S27],[]))
	end,
	case length(S19) of 
		1 -> NewS19 = S19;
		_ -> NewS19 = available(taken([S20,S21,S22,S23,S24,S25,S26,S27],[]),taken([NewS1,NewS10,S28,S37,S46,S55,S64,S73],[]),taken([NewS1,NewS2,NewS3,NewS10,NewS11,NewS12,S20,S21],[]))
	end,
	case length(S20) of 
		1 -> NewS20 = S20;
		_ -> NewS20 = available(taken([NewS19,S21,S22,S23,S24,S25,S26,S27],[]),taken([NewS2,NewS11,S29,S38,S47,S56,S65,S74],[]),taken([NewS1,NewS2,NewS3,NewS10,NewS11,NewS12,NewS19,S21],[]))
	end,
	case length(S21) of 
		1 -> NewS21 = S21;
		_ -> NewS21 = available(taken([NewS19,NewS20,S22,S23,S24,S25,S26,S27],[]),taken([NewS3,NewS12,S30,S39,S48,S57,S66,S75],[]),taken([NewS1,NewS2,NewS3,NewS10,NewS11,NewS12,NewS19,NewS20],[]))
	end,
	case length(S22) of 
		1 -> NewS22 = S22;
		_ -> NewS22 = available(taken([NewS19,NewS20,NewS21,S23,S24,S25,S26,S27],[]),taken([NewS4,NewS13,S31,S40,S49,S58,S67,S76],[]),taken([NewS4,NewS5,NewS6,NewS13,NewS14,NewS15,S23,S24],[]))
	end,
	case length(S23) of 
		1 -> NewS23 = S23;
		_ -> NewS23 = available(taken([NewS19,NewS20,NewS21,NewS22,S24,S25,S26,S27],[]),taken([NewS5,NewS14,S32,S41,S50,S59,S68,S77],[]),taken([NewS4,NewS5,NewS6,NewS13,NewS14,NewS15,NewS22,S24],[]))
	end,
	case length(S24) of 
		1 -> NewS24 = S24;
		_ -> NewS24 = available(taken([NewS19,NewS20,NewS21,NewS22,NewS23,S25,S26,S27],[]),taken([NewS6,NewS15,S33,S42,S51,S60,S69,S78],[]),taken([NewS4,NewS5,NewS6,NewS13,NewS14,NewS15,NewS22,NewS23],[]))
	end,
	case length(S25) of 
		1 -> NewS25 = S25;
		_ -> NewS25 = available(taken([NewS19,NewS20,NewS21,NewS22,NewS23,NewS24,S26,S27],[]),taken([NewS7,NewS16,S34,S43,S52,S61,S70,S79],[]),taken([NewS7,NewS8,NewS9,NewS16,NewS17,NewS18,S26,S27],[]))
	end,
	case length(S26) of 
		1 -> NewS26 = S26;
		_ -> NewS26 = available(taken([NewS19,NewS20,NewS21,NewS22,NewS23,NewS24,NewS25,S27],[]),taken([NewS8,NewS17,S35,S44,S53,S62,S71,S80],[]),taken([NewS7,NewS8,NewS9,NewS16,NewS17,NewS18,NewS25,S27],[]))
	end,
	case length(S27) of 
		1 -> NewS27 = S27;
		_ -> NewS27 = available(taken([NewS19,NewS20,NewS21,NewS22,NewS23,NewS24,NewS25,NewS26],[]),taken([NewS9,NewS18,S36,S45,S54,S63,S72,S81],[]),taken([NewS7,NewS8,NewS9,NewS16,NewS17,NewS18,NewS25,NewS26],[]))
	end,
	case length(S28) of 
		1 -> NewS28 = S28;
		_ -> NewS28 = available(taken([S29,S30,S31,S32,S33,S34,S35,S36],[]),taken([NewS1,NewS10,NewS19,S37,S46,S55,S64,S73],[]),taken([S29,S30,S37,S38,S39,S46,S47,S48],[]))
	end,
	case length(S29) of 
		1 -> NewS29 = S29;
		_ -> NewS29 = available(taken([NewS28,S30,S31,S32,S33,S34,S35,S36],[]),taken([NewS2,NewS11,NewS20,S38,S47,S56,S65,S74],[]),taken([NewS28,S30,S37,S38,S39,S46,S47,S48],[]))
	end,
	case length(S30) of 
		1 -> NewS30 = S30;
		_ -> NewS30 = available(taken([NewS28,NewS29,S31,S32,S33,S34,S35,S36],[]),taken([NewS3,NewS12,NewS21,S39,S48,S57,S66,S75],[]),taken([NewS28,NewS29,S37,S38,S39,S46,S47,S48],[]))
	end,
	case length(S31) of 
		1 -> NewS31 = S31;
		_ -> NewS31 = available(taken([NewS28,NewS29,NewS30,S32,S33,S34,S35,S36],[]),taken([NewS4,NewS13,NewS22,S40,S49,S58,S67,S76],[]),taken([S32,S33,S40,S41,S42,S49,S50,S51],[]))
	end,
	case length(S32) of 
		1 -> NewS32 = S32;
		_ -> NewS32 = available(taken([NewS28,NewS29,NewS30,NewS31,S33,S34,S35,S36],[]),taken([NewS5,NewS14,NewS23,S41,S50,S59,S68,S77],[]),taken([NewS31,S33,S40,S41,S42,S49,S50,S51],[]))
	end,
	case length(S33) of 
		1 -> NewS33 = S33;
		_ -> NewS33 = available(taken([NewS28,NewS29,NewS30,NewS31,NewS32,S34,S35,S36],[]),taken([NewS6,NewS15,NewS24,S42,S51,S60,S69,S78],[]),taken([NewS31,NewS32,S40,S41,S42,S49,S50,S51],[]))
	end,
	case length(S34) of 
		1 -> NewS34 = S34;
		_ -> NewS34 = available(taken([NewS28,NewS29,NewS30,NewS31,NewS32,NewS33,S35,S36],[]),taken([NewS7,NewS16,NewS25,S43,S52,S61,S70,S79],[]),taken([S35,S36,S43,S44,S45,S52,S53,S54],[]))
	end,
	case length(S35) of 
		1 -> NewS35 = S35;
		_ -> NewS35 = available(taken([NewS28,NewS29,NewS30,NewS31,NewS32,NewS33,NewS34,S36],[]),taken([NewS8,NewS17,NewS26,S44,S53,S62,S71,S80],[]),taken([NewS34,S36,S43,S44,S45,S52,S53,S54],[]))
	end,
	case length(S36) of 
		1 -> NewS36 = S36;
		_ -> NewS36 = available(taken([NewS28,NewS29,NewS30,NewS31,NewS32,NewS33,NewS34,NewS35],[]),taken([NewS9,NewS18,NewS27,S45,S54,S63,S72,S81],[]),taken([NewS34,NewS35,S43,S44,S45,S52,S53,S54],[]))
	end,
	case length(S37) of 
		1 -> NewS37 = S37;
		_ -> NewS37 = available(taken([S38,S39,S40,S41,S42,S43,S44,S45],[]),taken([NewS1,NewS10,NewS19,NewS28,S46,S55,S64,S73],[]),taken([NewS28,NewS29,NewS30,S38,S39,S46,S47,S48],[]))
	end,
	case length(S38) of 
		1 -> NewS38 = S38;
		_ -> NewS38 = available(taken([NewS37,S39,S40,S41,S42,S43,S44,S45],[]),taken([NewS2,NewS11,NewS20,NewS29,S47,S56,S65,S74],[]),taken([NewS28,NewS29,NewS30,NewS37,S39,S46,S47,S48],[]))
	end,
	case length(S39) of 
		1 -> NewS39 = S39;
		_ -> NewS39 = available(taken([NewS37,NewS38,S40,S41,S42,S43,S44,S45],[]),taken([NewS3,NewS12,NewS21,NewS30,S48,S57,S66,S75],[]),taken([NewS28,NewS29,NewS30,NewS37,NewS38,S46,S47,S48],[]))
	end,
	case length(S40) of 
		1 -> NewS40 = S40;
		_ -> NewS40 = available(taken([NewS37,NewS38,NewS39,S41,S42,S43,S44,S45],[]),taken([NewS4,NewS13,NewS22,NewS31,S49,S58,S67,S76],[]),taken([NewS31,NewS32,NewS33,S41,S42,S49,S50,S51],[]))
	end,
	case length(S41) of 
		1 -> NewS41 = S41;
		_ -> NewS41 = available(taken([NewS37,NewS38,NewS39,NewS40,S42,S43,S44,S45],[]),taken([NewS5,NewS14,NewS23,NewS32,S50,S59,S68,S77],[]),taken([NewS31,NewS32,NewS33,NewS40,S42,S49,S50,S51],[]))
	end,
	case length(S42) of 
		1 -> NewS42 = S42;
		_ -> NewS42 = available(taken([NewS37,NewS38,NewS39,NewS40,NewS41,S43,S44,S45],[]),taken([NewS6,NewS15,NewS24,NewS33,S51,S60,S69,S78],[]),taken([NewS31,NewS32,NewS33,NewS40,NewS41,S49,S50,S51],[]))
	end,
	case length(S43) of 
		1 -> NewS43 = S43;
		_ -> NewS43 = available(taken([NewS37,NewS38,NewS39,NewS40,NewS41,NewS42,S44,S45],[]),taken([NewS7,NewS16,NewS25,NewS34,S52,S61,S70,S79],[]),taken([NewS34,NewS35,NewS36,S44,S45,S52,S53,S54],[]))
	end,
	case length(S44) of 
		1 -> NewS44 = S44;
		_ -> NewS44 = available(taken([NewS37,NewS38,NewS39,NewS40,NewS41,NewS42,NewS43,S45],[]),taken([NewS8,NewS17,NewS26,NewS35,S53,S62,S71,S80],[]),taken([NewS34,NewS35,NewS36,NewS43,S45,S52,S53,S54],[]))
	end,
	case length(S45) of 
		1 -> NewS45 = S45;
		_ -> NewS45 = available(taken([NewS37,NewS38,NewS39,NewS40,NewS41,NewS42,NewS43,NewS44],[]),taken([NewS9,NewS18,NewS27,NewS36,S54,S63,S72,S81],[]),taken([NewS34,NewS35,NewS36,NewS43,NewS44,S52,S53,S54],[]))
	end,
	case length(S46) of 
		1 -> NewS46 = S46;
		_ -> NewS46 = available(taken([S47,S48,S49,S50,S51,S52,S53,S54],[]),taken([NewS1,NewS10,NewS19,NewS28,NewS37,S55,S64,S73],[]),taken([NewS28,NewS29,NewS30,NewS37,NewS38,NewS39,S47,S48],[]))
	end,
	case length(S47) of 
		1 -> NewS47 = S47;
		_ -> NewS47 = available(taken([NewS46,S48,S49,S50,S51,S52,S53,S54],[]),taken([NewS2,NewS11,NewS20,NewS29,NewS38,S56,S65,S74],[]),taken([NewS28,NewS29,NewS30,NewS37,NewS38,NewS39,NewS46,S48],[]))
	end,
	case length(S48) of 
		1 -> NewS48 = S48;
		_ -> NewS48 = available(taken([NewS46,NewS47,S49,S50,S51,S52,S53,S54],[]),taken([NewS3,NewS12,NewS21,NewS30,NewS39,S57,S66,S75],[]),taken([NewS28,NewS29,NewS30,NewS37,NewS38,NewS39,NewS46,NewS47],[]))
	end,
	case length(S49) of 
		1 -> NewS49 = S49;
		_ -> NewS49 = available(taken([NewS46,NewS47,NewS48,S50,S51,S52,S53,S54],[]),taken([NewS4,NewS13,NewS22,NewS31,NewS40,S58,S67,S76],[]),taken([NewS31,NewS32,NewS33,NewS40,NewS41,NewS42,S50,S51],[]))
	end,
	case length(S50) of 
		1 -> NewS50 = S50;
		_ -> NewS50 = available(taken([NewS46,NewS47,NewS48,NewS49,S51,S52,S53,S54],[]),taken([NewS5,NewS14,NewS23,NewS32,NewS41,S59,S68,S77],[]),taken([NewS31,NewS32,NewS33,NewS40,NewS41,NewS42,NewS49,S51],[]))
	end,
	case length(S51) of 
		1 -> NewS51 = S51;
		_ -> NewS51 = available(taken([NewS46,NewS47,NewS48,NewS49,NewS50,S52,S53,S54],[]),taken([NewS6,NewS15,NewS24,NewS33,NewS42,S60,S69,S78],[]),taken([NewS31,NewS32,NewS33,NewS40,NewS41,NewS42,NewS49,NewS50],[]))
	end,
	case length(S52) of 
		1 -> NewS52 = S52;
		_ -> NewS52 = available(taken([NewS46,NewS47,NewS48,NewS49,NewS50,NewS51,S53,S54],[]),taken([NewS7,NewS16,NewS25,NewS34,NewS43,S61,S70,S79],[]),taken([NewS34,NewS35,NewS36,NewS43,NewS44,NewS45,S53,S54],[]))
	end,
	case length(S53) of 
		1 -> NewS53 = S53;
		_ -> NewS53 = available(taken([NewS46,NewS47,NewS48,NewS49,NewS50,NewS51,NewS52,S54],[]),taken([NewS8,NewS17,NewS26,NewS35,NewS44,S62,S71,S80],[]),taken([NewS34,NewS35,NewS36,NewS43,NewS44,NewS45,NewS52,S54],[]))
	end,
	case length(S54) of 
		1 -> NewS54 = S54;
		_ -> NewS54 = available(taken([NewS46,NewS47,NewS48,NewS49,NewS50,NewS51,NewS52,NewS53],[]),taken([NewS9,NewS18,NewS27,NewS36,NewS45,S63,S72,S81],[]),taken([NewS34,NewS35,NewS36,NewS43,NewS44,NewS45,NewS52,NewS53],[]))
	end,
	case length(S55) of 
		1 -> NewS55 = S55;
		_ -> NewS55 = available(taken([S56,S57,S58,S59,S60,S61,S62,S63],[]),taken([NewS1,NewS10,NewS19,NewS28,NewS37,NewS46,S64,S73],[]),taken([S56,S57,S64,S65,S66,S73,S74,S75],[]))
	end,
	case length(S56) of 
		1 -> NewS56 = S56;
		_ -> NewS56 = available(taken([NewS55,S57,S58,S59,S60,S61,S62,S63],[]),taken([NewS2,NewS11,NewS20,NewS29,NewS38,NewS47,S65,S74],[]),taken([NewS55,S57,S64,S65,S66,S73,S74,S75],[]))
	end,
	case length(S57) of 
		1 -> NewS57 = S57;
		_ -> NewS57 = available(taken([NewS55,NewS56,S58,S59,S60,S61,S62,S63],[]),taken([NewS3,NewS12,NewS21,NewS30,NewS39,NewS48,S66,S75],[]),taken([NewS55,NewS56,S64,S65,S66,S73,S74,S75],[]))
	end,
	case length(S58) of 
		1 -> NewS58 = S58;
		_ -> NewS58 = available(taken([NewS55,NewS56,NewS57,S59,S60,S61,S62,S63],[]),taken([NewS4,NewS13,NewS22,NewS31,NewS40,NewS49,S67,S76],[]),taken([S59,S60,S67,S68,S69,S76,S77,S78],[]))
	end,
	case length(S59) of 
		1 -> NewS59 = S59;
		_ -> NewS59 = available(taken([NewS55,NewS56,NewS57,NewS58,S60,S61,S62,S63],[]),taken([NewS5,NewS14,NewS23,NewS32,NewS41,NewS50,S68,S77],[]),taken([NewS58,S60,S67,S68,S69,S76,S77,S78],[]))
	end,
	case length(S60) of 
		1 -> NewS60 = S60;
		_ -> NewS60 = available(taken([NewS55,NewS56,NewS57,NewS58,NewS59,S61,S62,S63],[]),taken([NewS6,NewS15,NewS24,NewS33,NewS42,NewS51,S69,S78],[]),taken([NewS58,NewS59,S67,S68,S69,S76,S77,S78],[]))
	end,
	case length(S61) of 
		1 -> NewS61 = S61;
		_ -> NewS61 = available(taken([NewS55,NewS56,NewS57,NewS58,NewS59,NewS60,S62,S63],[]),taken([NewS7,NewS16,NewS25,NewS34,NewS43,NewS52,S70,S79],[]),taken([S62,S63,S70,S71,S72,S79,S80,S81],[]))
	end,
	case length(S62) of 
		1 -> NewS62 = S62;
		_ -> NewS62 = available(taken([NewS55,NewS56,NewS57,NewS58,NewS59,NewS60,NewS61,S63],[]),taken([NewS8,NewS17,NewS26,NewS35,NewS44,NewS53,S71,S80],[]),taken([NewS61,S63,S70,S71,S72,S79,S80,S81],[]))
	end,
	case length(S63) of 
		1 -> NewS63 = S63;
		_ -> NewS63 = available(taken([NewS55,NewS56,NewS57,NewS58,NewS59,NewS60,NewS61,NewS62],[]),taken([NewS9,NewS18,NewS27,NewS36,NewS45,NewS54,S72,S81],[]),taken([NewS61,NewS62,S70,S71,S72,S79,S80,S81],[]))
	end,
	case length(S64) of 
		1 -> NewS64 = S64;
		_ -> NewS64 = available(taken([S65,S66,S67,S68,S69,S70,S71,S72],[]),taken([NewS1,NewS10,NewS19,NewS28,NewS37,NewS46,NewS55,S73],[]),taken([NewS55,NewS56,NewS57,S65,S66,S73,S74,S75],[]))
	end,
	case length(S65) of 
		1 -> NewS65 = S65;
		_ -> NewS65 = available(taken([NewS64,S66,S67,S68,S69,S70,S71,S72],[]),taken([NewS2,NewS11,NewS20,NewS29,NewS38,NewS47,NewS56,S74],[]),taken([NewS55,NewS56,NewS57,NewS64,S66,S73,S74,S75],[]))
	end,
	case length(S66) of 
		1 -> NewS66 = S66;
		_ -> NewS66 = available(taken([NewS64,NewS65,S67,S68,S69,S70,S71,S72],[]),taken([NewS3,NewS12,NewS21,NewS30,NewS39,NewS48,NewS57,S75],[]),taken([NewS55,NewS56,NewS57,NewS64,NewS65,S73,S74,S75],[]))
	end,
	case length(S67) of 
		1 -> NewS67 = S67;
		_ -> NewS67 = available(taken([NewS64,NewS65,NewS66,S68,S69,S70,S71,S72],[]),taken([NewS4,NewS13,NewS22,NewS31,NewS40,NewS49,NewS58,S76],[]),taken([NewS58,NewS59,NewS60,S68,S69,S76,S77,S78],[]))
	end,
	case length(S68) of 
		1 -> NewS68 = S68;
		_ -> NewS68 = available(taken([NewS64,NewS65,NewS66,NewS67,S69,S70,S71,S72],[]),taken([NewS5,NewS14,NewS23,NewS32,NewS41,NewS50,NewS59,S77],[]),taken([NewS58,NewS59,NewS60,NewS67,S69,S76,S77,S78],[]))
	end,
	case length(S69) of 
		1 -> NewS69 = S69;
		_ -> NewS69 = available(taken([NewS64,NewS65,NewS66,NewS67,NewS68,S70,S71,S72],[]),taken([NewS6,NewS15,NewS24,NewS33,NewS42,NewS51,NewS60,S78],[]),taken([NewS58,NewS59,NewS60,NewS67,NewS68,S76,S77,S78],[]))
	end,
	case length(S70) of 
		1 -> NewS70 = S70;
		_ -> NewS70 = available(taken([NewS64,NewS65,NewS66,NewS67,NewS68,NewS69,S71,S72],[]),taken([NewS7,NewS16,NewS25,NewS34,NewS43,NewS52,NewS61,S79],[]),taken([NewS61,NewS62,NewS63,S71,S72,S79,S80,S81],[]))
	end,
	case length(S71) of 
		1 -> NewS71 = S71;
		_ -> NewS71 = available(taken([NewS64,NewS65,NewS66,NewS67,NewS68,NewS69,NewS70,S72],[]),taken([NewS8,NewS17,NewS26,NewS35,NewS44,NewS53,NewS62,S80],[]),taken([NewS61,NewS62,NewS63,NewS70,S72,S79,S80,S81],[]))
	end,
	case length(S72) of 
		1 -> NewS72 = S72;
		_ -> NewS72 = available(taken([NewS64,NewS65,NewS66,NewS67,NewS68,NewS69,NewS70,NewS71],[]),taken([NewS9,NewS18,NewS27,NewS36,NewS45,NewS54,NewS63,S81],[]),taken([NewS61,NewS62,NewS63,NewS70,NewS71,S79,S80,S81],[]))
	end,
	case length(S73) of 
		1 -> NewS73 = S73;
		_ -> NewS73 = available(taken([S74,S75,S76,S77,S78,S79,S80,S81],[]),taken([NewS1,NewS10,NewS19,NewS28,NewS37,NewS46,NewS55,NewS64],[]),taken([NewS55,NewS56,NewS57,NewS64,NewS65,NewS66,S74,S75],[]))
	end,
	case length(S74) of 
		1 -> NewS74 = S74;
		_ -> NewS74 = available(taken([NewS73,S75,S76,S77,S78,S79,S80,S81],[]),taken([NewS2,NewS11,NewS20,NewS29,NewS38,NewS47,NewS56,NewS65],[]),taken([NewS55,NewS56,NewS57,NewS64,NewS65,NewS66,NewS73,S75],[]))
	end,
	case length(S75) of 
		1 -> NewS75 = S75;
		_ -> NewS75 = available(taken([NewS73,NewS74,S76,S77,S78,S79,S80,S81],[]),taken([NewS3,NewS12,NewS21,NewS30,NewS39,NewS48,NewS57,NewS66],[]),taken([NewS55,NewS56,NewS57,NewS64,NewS65,NewS66,NewS73,NewS74],[]))
	end,
	case length(S76) of 
		1 -> NewS76 = S76;
		_ -> NewS76 = available(taken([NewS73,NewS74,NewS75,S77,S78,S79,S80,S81],[]),taken([NewS4,NewS13,NewS22,NewS31,NewS40,NewS49,NewS58,NewS67],[]),taken([NewS58,NewS59,NewS60,NewS67,NewS68,NewS69,S77,S78],[]))
	end,
	case length(S77) of 
		1 -> NewS77 = S77;
		_ -> NewS77 = available(taken([NewS73,NewS74,NewS75,NewS76,S78,S79,S80,S81],[]),taken([NewS5,NewS14,NewS23,NewS32,NewS41,NewS50,NewS59,NewS68],[]),taken([NewS58,NewS59,NewS60,NewS67,NewS68,NewS69,NewS76,S78],[]))
	end,
	case length(S78) of 
		1 -> NewS78 = S78;
		_ -> NewS78 = available(taken([NewS73,NewS74,NewS75,NewS76,NewS77,S79,S80,S81],[]),taken([NewS6,NewS15,NewS24,NewS33,NewS42,NewS51,NewS60,NewS69],[]),taken([NewS58,NewS59,NewS60,NewS67,NewS68,NewS69,NewS76,NewS77],[]))
	end,
	case length(S79) of 
		1 -> NewS79 = S79;
		_ -> NewS79 = available(taken([NewS73,NewS74,NewS75,NewS76,NewS77,NewS78,S80,S81],[]),taken([NewS7,NewS16,NewS25,NewS34,NewS43,NewS52,NewS61,NewS70],[]),taken([NewS61,NewS62,NewS63,NewS70,NewS71,NewS72,S80,S81],[]))
	end,
	case length(S80) of 
		1 -> NewS80 = S80;
		_ -> NewS80 = available(taken([NewS73,NewS74,NewS75,NewS76,NewS77,NewS78,NewS79,S81],[]),taken([NewS8,NewS17,NewS26,NewS35,NewS44,NewS53,NewS62,NewS71],[]),taken([NewS61,NewS62,NewS63,NewS70,NewS71,NewS72,NewS79,S81],[]))
	end,
	case length(S81) of 
		1 -> NewS81 = S81;
		_ -> NewS81 = available(taken([NewS73,NewS74,NewS75,NewS76,NewS77,NewS78,NewS79,NewS80],[]),taken([NewS9,NewS18,NewS27,NewS36,NewS45,NewS54,NewS63,NewS72],[]),taken([NewS61,NewS62,NewS63,NewS70,NewS71,NewS72,NewS79,NewS80],[]))
	end,
	sudoku(NewS1,NewS2,NewS3,NewS4,NewS5,NewS6,NewS7,NewS8,NewS9,NewS10,NewS11,NewS12,NewS13,NewS14,NewS15,NewS16,NewS17,NewS18,NewS19,NewS20,NewS21,NewS22,NewS23,NewS24,NewS25,NewS26,NewS27,NewS28,NewS29,NewS30,NewS31,NewS32,NewS33,NewS34,NewS35,NewS36,NewS37,NewS38,NewS39,NewS40,NewS41,NewS42,NewS43,NewS44,NewS45,NewS46,NewS47,NewS48,NewS49,NewS50,NewS51,NewS52,NewS53,NewS54,NewS55,NewS56,NewS57,NewS58,NewS59,NewS60,NewS61,NewS62,NewS63,NewS64,NewS65,NewS66,NewS67,NewS68,NewS69,NewS70,NewS71,NewS72,NewS73,NewS74,NewS75,NewS76,NewS77,NewS78,NewS79,NewS80,NewS81,NewN,progress([NewS1,NewS2,NewS3,NewS4,NewS5,NewS6,NewS7,NewS8,NewS9,NewS10,NewS11,NewS12,NewS13,NewS14,NewS15,NewS16,NewS17,NewS18,NewS19,NewS20,NewS21,NewS22,NewS23,NewS24,NewS25,NewS26,NewS27,NewS28,NewS29,NewS30,NewS31,NewS32,NewS33,NewS34,NewS35,NewS36,NewS37,NewS38,NewS39,NewS40,NewS41,NewS42,NewS43,NewS44,NewS45,NewS46,NewS47,NewS48,NewS49,NewS50,NewS51,NewS52,NewS53,NewS54,NewS55,NewS56,NewS57,NewS58,NewS59,NewS60,NewS61,NewS62,NewS63,NewS64,NewS65,NewS66,NewS67,NewS68,NewS69,NewS70,NewS71,NewS72,NewS73,NewS74,NewS75,NewS76,NewS77,NewS78,NewS79,NewS80,NewS81],0)).
